{"title":"Разбор задания Secure Vault (crypto 250)","content":{"time":1711718439431,"blocks":[{"id":"Q6rCBuVmk7","type":"header","data":{"text":"Условие","level":2}},{"id":"BcLbBX12Xi","type":"paragraph","data":{"text":"Вас пригласили протестировать безопасность нового онлайн-хранилища. Вам известно, что для шифрования использовался алгоритм шифрования AES-256 в режиме ECB (Electronic Codebook) с использованием ключа длиной 256 бит. Ваша задача&nbsp;— получить доступ к содержимому хранилища и найти флаг."}},{"id":"35q75A_VGE","type":"paragraph","data":{"text":"К заданию приложен архив <code class=\"inline-code\"><code>secure_vault.zip</code></code>, содержащий один файл <code class=\"inline-code\"><code>vault_encrypted.txt</code></code>."}},{"id":"DV92Mt9h9F","type":"header","data":{"text":"Решение","level":2}},{"id":"L-RQDRetLh","type":"paragraph","data":{"text":"Файл <code class=\"inline-code\"><code>vault_encrypted.txt</code></code> содержит строку, которая кажется зашифрованной, а также большое количество текста, похожего на base64.<br>"}},{"id":"0IkP53ygEF","type":"paragraph","data":{"text":"Раздекодировав base64, можно обнаружить следующие подсказки:"}},{"id":"nA25vSLqMv","type":"list","data":{"style":"ordered","items":["Используемый ключ&nbsp;— английский текст длиной 32 символа из любимой книги автора задания.","Шифрованный текст начинается с известной фразы \"ugra_\" (без кавычек)."]}},{"id":"bY3IhDobwP","type":"header","data":{"text":"Определение книги","level":3}},{"id":"UpF0JxDKwB","type":"paragraph","data":{"text":"Если известно, что используемый ключ состоит из английского текста длиной 32 символа и он взят из любимой книги автора задания, можно попробовать использовать методы атаки на ключевое пространство, основанные на знании языка и вероятностных характеристиках текста."}},{"id":"9oBlPCY56D","type":"paragraph","data":{"text":"Этот метод будет более эффективным, чем простой перебор всех возможных ключей."}},{"id":"dkWzaCoHAw","type":"paragraph","data":{"text":"Узнать, какая книга является любимой для автора задания, может быть сложной задачей, особенно если нет прямых указаний или информации о предпочтениях автора. Однако, есть несколько способов, которые можно попробовать:"}},{"id":"VFaWabLM0t","type":"list","data":{"style":"ordered","items":["Прямой запрос: Если есть возможность связаться с автором задания или организаторами CTF, можно попробовать просто спросить, какая книга является его любимой. Однако, это может быть неэффективно, поскольку информация может быть непубличной или автор может не желать ее раскрывать.","Исследование профиля автора: Изучите профиль автора, если это возможно. Это может включать в себя поиск его социальных медиа, блогов, интервью или других публичных источников информации. Иногда авторы могут упоминать свои любимые книги в подобных источниках.","Анализ предыдущих работ: Изучите предыдущие работы или задания автора, если таковые имеются. Может быть, в них есть какие-то подсказки или намеки на его личные предпочтения.","Сообщество CTF: Поговорите с другими участниками CTF, возможно, кто-то уже знает о предпочтениях автора или имеет какую-то информацию, которая может помочь вам.","Используйте стандартные книги: Если невозможно определить конкретную любимую книгу автора, можно использовать общеизвестные книги, которые широко признаются и уважаются в сообществе, как потенциальные кандидаты для составления ключей."]}},{"id":"4sw7l5RY6d","type":"paragraph","data":{"text":"В данном случае нетрудным оказывается найти сайт автора задания: <a href=\"https://purplesyringa.moe/\">purplesyringa.moe</a>. На сайте написано, что любимая книга автора — веб-сериал Worm.<br>"}},{"id":"6U1ZCL8bie","type":"header","data":{"text":"Поиск ключа","level":3}},{"id":"BbrVtWv9Tc","type":"paragraph","data":{"text":"Попробуем найти все подряд идущие слова, которые в сумме (вместе с пробелами) занимают ровно 32 символа."}},{"id":"amn6Cmonme","type":"paragraph","data":{"text":"Для написания скрипта можно использовать язык программирования Python и его библиотеки, такие как <code class=\"inline-code\"><code>BeautifulSoup</code></code> для извлечения текста с веб-сайта. Извлечем все ссылки на другие страницы с сайта parahumans.wordpress.com, а затем выполним анализ каждой из этих страниц. Это можно сделать с помощью следующего кода:<br>"}},{"id":"7DYyu_kv63","type":"paid","data":{}},{"id":"09XDdQSmOY","type":"code","data":{"code":"import requests\nfrom bs4 import BeautifulSoup\nfrom urllib.parse import urljoin\n\n# Функция для извлечения ссылок на другие страницы с сайта\ndef extract_links(url):\n    response = requests.get(url)\n    soup = BeautifulSoup(response.text, \"html.parser\")\n    links = soup.find_all('a', href=True)\n    absolute_links = [urljoin(url, link['href']) for link in links]\n    return [link for link in absolute_links if 'parahumans.wordpress.com' in link]\n\n# Получаем все ссылки с заглавной страницы сайта\nmain_url = \"https://parahumans.wordpress.com/\"\nall_links = extract_links(main_url)\n\n# Проходимся по каждой ссылке и анализируем текст\nfor link in all_links:\n    print(\"Analyzing page:\", link)\n    response = requests.get(link)\n    soup = BeautifulSoup(response.text, \"html.parser\")\n    text = soup.get_text()\n\n    # Разбиваем текст на слова\n    words = text.split()\n\n    # Ищем последовательности слов, в сумме занимающие 32 символа\n    result = []\n    for i in range(len(words)):\n        current_sequence = words[i]\n        for j in range(i+1, len(words)):\n            if len(current_sequence) + len(words[j]) + 1 <= 32:\n                current_sequence += \" \" + words[j]\n            else:\n                break\n        if len(current_sequence) == 32:\n            result.append(current_sequence)\n\n    # Выводим результаты\n    for seq in result:\n        print(seq)"}},{"id":"5QrsV21Soe","type":"paragraph","data":{"text":"Мы не знаем, какой именно ключ правильный, но эти ключи — разумные кандидаты.<br>"}},{"id":"FKVeHxStTW","type":"header","data":{"text":"Декодирование","level":3}},{"id":"XrQvVbQx-l","type":"paragraph","data":{"text":"Используем программу для работы с криптографией (например, OpenSSL или Cryptography в Python), чтобы попытаться дешифровать файл <code class=\"inline-code\">vault_encrypted.txt</code>, используя алгоритм AES-256 в режиме ECB."}},{"id":"4mxHIWTzOD","type":"paid","data":{}},{"id":"3SYpyx08f6","type":"paragraph","data":{"text":"Поскольку мы знаем, что шифрованный текст начинается с фразы \"ugra_\", мы можем использовать это для проверки успешности расшифровки. Как только мы найдем ключ, который дает расшифрованный текст, начинающийся с \"ugra_\", это будет флаг."}},{"id":"WKADR8VAHF","type":"paragraph","data":{"text":"Флаг: <b>{{flag}}</b>"}}],"version":"2.29.1"}}
